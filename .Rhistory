for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " +") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
dir = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, "   +") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
dir = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, "+  ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
dir = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " +  ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
dir = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
dir = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim
)
sol_tib
sol_tib
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals = rep("=", 7),
sol = A%*%solution %>% round(2),
x_4 = sub("\\+", "", x_4) %>% str_trim,
dir = dir,
b   = b
)
sol_tib
sol_tib
sol_tib %>% View
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals = rep("=", 7),
sol    = A%*%solution %>% round(2),
x_4    = sub("\\+", "", x_4) %>% str_trim,
check  = rep("...", 7),
dir    = dir,
b      = b
)
sol_tib
sol_tib
sol_tib %>% as.data.frame()
sol_tib %>% as.data.frame()
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals = rep("=", 7),
sol    = A%*%solution %>% round(2),
x_4    = sub("\\+", "", x_4) %>% str_trim,
'consts==>'  = rep("...", 7),
dir    = dir,
b      = b
)
sol_tib
sol_tib
sol_tib %>% as.data.frame
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals            = rep("=", 7),
sol               = A%*%solution %>% round(2),
x_4               = sub("\\+", "", x_4) %>% str_trim,
'constraints==>'  = rep("...", 7),
dir               = dir,
b                 = b
)
sol_tib
sol_tib
sol_tib %>% View
sol_tib %>% as.data.frame
sol_tib %>% as.data.frame
\clear
sol_tib %>% as.data.frame
H
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
library(tidyverse)
library(lpSolve)
# Revenue variables
initial_data <-
tibble(
origin  = c(
'search',
'display',
'youtube',
'gmail'
),
revenue = c(
225776,
99292,
4120,
2472
),
cost    = c(
8827,
5172,
833,
423
)
) %>%
mutate(
roi = (revenue - cost) / cost
)
A <-
matrix(
c(
1,    1,    1,    1,
0,    1,    0,    0,
0,    0,    1,    0,
-0.6,  0.4,  0.4, -0.6,
0,    0,   -1,    1,
.13,  .09,  .02,  .03
),
ncol = 4,
byrow = TRUE
)
b <-
c(
15000,
3000,
400,
0,
0,
0,
1500
)
dir <-
c(
"<=",
">=",
">=",
">=",
">=",
">="
)
obj <-
c(
initial_data$roi
)
cbind(A, dir, b) %>%
noquote()
s = lp("max", obj, A, dir, b)
solution <-
s$solution
names(solution) <-
initial_data %>%
pull(origin) %>%
paste0("Budget-", .)
solution
A %*% solution %>%
round(2)
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals            = rep("=", 7),
sol               = A%*%solution %>% round(2),
x_4               = sub("\\+", "", x_4) %>% str_trim,
'constraints==>'  = rep("...", 7),
dir               = dir,
b                 = b
) %>%
as.data.frame
sol_tib <-
tibble(
x_1 = rep(NA, 7),
x_2 = rep(NA, 7),
x_3 = rep(NA, 7),
x_4 = rep(NA, 7)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals            = rep("=", 6),
sol               = A%*%solution %>% round(2),
x_4               = sub("\\+", "", x_4) %>% str_trim,
'constraints==>'  = rep("...", 6),
dir               = dir,
b                 = b
) %>%
as.data.frame
sol_tib <-
tibble(
x_1 = rep(NA, 6),
x_2 = rep(NA, 6),
x_3 = rep(NA, 6),
x_4 = rep(NA, 6)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals            = rep("=", 6),
sol               = A%*%solution %>% round(2),
x_4               = sub("\\+", "", x_4) %>% str_trim,
'constraints==>'  = rep("...", 6),
dir               = dir,
b                 = b
) %>%
as.data.frame
library(tidyverse)
library(lpSolve)
# Revenue variables
initial_data <-
tibble(
origin  = c(
'search',
'display',
'youtube',
'gmail'
),
revenue = c(
225776,
99292,
4120,
2472
),
cost    = c(
8827,
5172,
833,
423
)
) %>%
mutate(
roi = (revenue - cost) / cost
)
A <-
matrix(
c(
1,    1,    1,    1,
0,    1,    0,    0,
0,    0,    1,    0,
-0.6,  0.4,  0.4, -0.6,
0,    0,   -1,    1,
.13,  .09,  .02,  .03
),
ncol = 4,
byrow = TRUE
)
b <-
c(
15000,
3000,
400,
0,
0,
0,
1500
)
dir <-
c(
"<=",
">=",
">=",
">=",
">=",
">="
)
obj <-
c(
initial_data$roi
)
cbind(A, dir, b) %>%
noquote()
s = lp("max", obj, A, dir, b)
solution <-
s$solution
names(solution) <-
initial_data %>%
pull(origin) %>%
paste0("Budget-", .)
solution
A %*% solution %>%
round(2)
sol_tib <-
tibble(
x_1 = rep(NA, 6),
x_2 = rep(NA, 6),
x_3 = rep(NA, 6),
x_4 = rep(NA, 6)
)
for(i in 1:nrow(A)) {
solz <-
paste0(A[i,], " * ", solution, " + ") %>%
noquote
sol_tib[i, 1:4] <-
solz
}
sol_tib <-
sol_tib %>%
mutate(
equals            = rep("=", 6),
sol               = A%*%solution %>% round(2),
x_4               = sub("\\+", "", x_4) %>% str_trim,
'constraints==>'  = rep("...", 6),
dir               = dir,
b                 = b
) %>%
as.data.frame
dir
b
template()
fdRen::template()
getwd()
fdRen::uploadPage("Cross_Optimization.html")
fdRen::uploadPage("Cross_Optimization.html")
fdRen::uploadPage("Cross_Optimization.Rmd")
fdRen::uploadPage
fdRen::uploadPage("Cross_Optimization")
fdRen::uploadPage("Cross_Optimization")
